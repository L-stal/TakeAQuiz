@page "/profile"
@using TakeAQuiz.Shared.ViewModels;
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudGrid Class="pa-10">
    <MudItem xs="12">
        <MudPaper Elevation="4" Class="pa-6 ma-4">
            <MudImage Src="" Alt="Profile picture" Elevation="4" Class="rounded-lg" />
            @if (userInfo != null)
            {
                <MudText Typo="Typo.h4">@userInfo.UserName</MudText>
            }
            else
            {
                <p>User information is not available.</p>
            }
        </MudPaper>
    </MudItem>

    <MudItem xs="12">
        <MudPaper Elevation="4" Class="pa-6 ma-4">
            @if (userInfo != null)
            {
                @for(int i = 0; i < userInfo.Quizzes.Count(); i++) {
                    <h5>@userInfo.Quizzes[i].Title</h5>
                    <h5>@userInfo.Quizzes[i].MaxScore</h5>
                    <h5>@userInfo.Quizzes[i].GamesPlayed</h5>
                    <h5>@userInfo.Quizzes[i].OverallRating</h5>
                }
            }
            else
            {
                <p>User information is not available.</p>
            }
        </MudPaper>
    </MudItem>

    <MudItem xs="12">
        <MudPaper Elevation="4" Class="pa-6 ma-4">
            <MudTabs Outlined="true" Position="Position.Top" Rounded="true" Border="true"
                     ApplyEffectsToContainer="true" Class="mt-8" PanelClass="pa-6">
                <MudTabPanel Text="Item One">
                    <MudText>Content One</MudText>
                </MudTabPanel>
                <MudTabPanel Text="Item Two">
                    <MudText>Content Two</MudText>
                </MudTabPanel>
                <MudTabPanel Text="Item Three">
                    <MudText>Content Three</MudText>
                </MudTabPanel>
            </MudTabs>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private UserViewModel userInfo;

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity;

        if (user != null && user.IsAuthenticated)
        {
            userInfo = await Http.GetFromJsonAsync<UserViewModel>("api/profile/getuserdata");
        }
    }
}
